
12-06-2023: DAY-01: INTRO, INSTALLATION, ARCHITECTURE & COMMANDS (ADD, COMMIT, STATUS, RESTORE, LOGS)

GIT:
yum install git -y: to install git
git init: to initialize .git repo (local repo)

vim index.html (untracked)
git status: show the stage of file
git add index.html: to track index.html
git commit -m "commit-1" index.html: to commit index.html
git log: to show the commits 
git log --oneline: to show logs on single line
git log -2: shows recent 2 logs
git log -5: shows recent 5 logs
git show e6bde29: to show the files which is committed to it
git show css1: to show which commit applied to file css1

TO CONFIGURE USER & EMAIL:
git config user.name "rahamshaik"
git config user.email "rahamshaik@gmail.com"
git log


RESTORE: TRACK -- > UNTRACK

touch file
git status
git add file1
git status
git restore --staged file1
git status

NOTE: It should not be committed.
if you try to untrack the committed file we need to modify the file.

HISTORY:

  1  mkdir netflic
    2  mv netflic/ netflix
    3  cd netflix/
    4  yum install git -y
    5  ls -al
    6  git init
    7  ls -al
    8  vim index.html
    9  git status
   10  git add index.html
   11  git status
   12  git commit -m "commit-1" index.html
   13  git status
   14  ll
   15  touch css{1..5}
   16  ll
   17  git status
   18  git add *
   19  git status
   20  git commit -m "commit-2" *
   21  git log
   22  git log --oneline
   23  git show e6bde29
   24  git show css1
   25  git config user.name "rahamshaik"
   26  git config user.email "rahamshaik@gmail.com"
   27  git log
   28  ll
   29  touch js{1..5}
   30  ll
   31  git status
   32  git add *
   33  git status
   34  git commit -m "commit-3" *
   35  git log
   36  git log -2
   37  git log -1
   38  toych file1
   39  touch file1
   40  git status
   41  git add file1
   42  git status
   43  git restore --staged file1
   44  git status
   45  git add file1
   46  git status
   47  git restore --staged file1
   48  git status
   49  git add file1
   50  git status
   51  ll
   52  vim index.html
   53  git status
   54  history

===============================================================

13-06-2023: DAY-02: BRACHES, MEREGE, REBASE, GITHUB

BRANCH: It is an individual line of development.
developers can develop the source code independently.
Default branch -- > Master 
master & main branches are called as long living branches
dev, qa, hotfix, release branches are called as short-living branches.

git branch: to list the branches
git branch movies: to create a branch called movies
git checkout movies: to switch to branch called movies
git checkout -b recharge: to create and switch at a time.




MERGE: Used to merge file blw two branches

git checkout master
git merge movies
git merge train


REBASE: Used to merge file blw two branches
git rebase recharge
git rebase dth



HISTORY:

 1  mkdir paytm
    2  cd paytm/
    3  yum install git -y
    4  git --version
    5  git -v
    6  ls -al
    7  git init
    8  ls -al
    9  touch file1
   10  git statsu
   11  git status
   12  git add file1
   13  git config user.name "raham"
   14  git config user.email "raham@gmail.com"
   15  git commit -m "commit-1" file1
   16  git branch
   17  git branch movies
   18  git branch
   19  ll
   20  git checkout movies
   21  git branch
   22  touch movies{1..5}
   23  git add movies*
   24  git config user.name "dev1"
   25  git config user.email "dev1@gmail.com"
   26  git commit -m "movies-v.1.0" movies*
   27  git log
   28  git show 79b58f79bed0d748b4e8b3390443ed67133be9da
   29  ll
   30  git checkout master
   31  ll
   32  git checkout movies
   33  git branch
   34  git branch train
   35  git branch
   36  git checkout train
   37  ll
   38  touch train{1..5}
   39  ll
   40  git status
   41  git add *
   42  git config user.name "dev2"
   43*
   44  git commit -m "train-v.1.0" *
   45  git branch
   46  git checkout -b recharge
   47  git branch
   48  ll
   49  git branch
   50  git log
   51  touch recharge{1..5}
   52  git add *
   53  git config user.name "dev3"
   54  git config user.email "dev3@gmail.com"
   55  git commit -m "recharge-v.1.0" *
   56  ll
   57  git checkout master
   58  git branch
   59  ll
   60  git checkout -b dth
   61  git branch
   62  ll
   63  touch dth{1..5}
   64  git add *
   65  git config user.name "dev4"
   66  git config user.email "dev4@gmail.com"
   67  git commit -m "dth-v.1.0" *
   68  git branch
   69  git checkout master
   70  ll
   71  git merge movies
   72  ll
   73  git merge train
   74  ll
   75  git rebase recharge
   76  ll
   77  git rebase dth
   78  ll
   79  git remote add origin https://github.com/kodaganivshnuvardhan/paytm.git
   80  ls -al
   81  git push origin master
   82  ll
   83  git checkout dth
   84  git branch
   85  git branch -D master
   86  git branch

 
